services:
  keycloak:
    container_name: keycloak
    hostname: keycloak
    image: quay.io/keycloak/keycloak:latest
    command: start-dev --import-realm
    environment:
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_PORT: 8090
      KC_HOSTNAME_PORT_HTTP: 8090
      KC_HOSTNAME_PORT_EXTERNAL: 8090
      KC_HOSTNAME_STRICT_BACKCHANNEL: 'false'
      KC_HTTP_ENABLED: 'true'
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_HEALTH_ENABLED: 'true'
      KC_BOOTSTRAP_ADMIN_USERNAME: 'keycloak'
      KC_BOOTSTRAP_ADMIN_PASSWORD: 'keycloak'
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db/openadr
      KC_DB_USERNAME: $PG_USER
      KC_DB_PASSWORD: $PG_PASSWORD
    ports:
      - 8090:8080
    volumes:
      - ./keycloak-realm-import.json:/opt/keycloak/data/import/realm-export.json
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live']
      interval: 30s
      timeout: 5s
      retries: 20
    depends_on:
      db:
        condition: service_healthy

  db:
    image: ghcr.io/tweedegolf/postgres:16
    environment:
      POSTGRES_USER: $PG_USER
      POSTGRES_DB: $PG_DB
      POSTGRES_PASSWORD: $PG_PASSWORD
      POSTGRES_HOST_AUTH_METHOD: trust
      TZ: $PG_TZ
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U openadr" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - ${PG_PORT}:5432
    volumes:
      - database-data:/var/lib/postgresql/data/

  vtn:
    build:
      dockerfile: vtn.Dockerfile
      context: .
    ports:
      - ${VTN_PORT}:3000
    environment:
      RUST_LOG: trace
      DATABASE_URL: postgres://openadr:openadr@db:5432/openadr
      OAUTH_TYPE: 'EXTERNAL'
      OAUTH_VALID_AUDIENCES: 'http://localhost:8060'
      OAUTH_KEY_TYPE: 'RSA'
      PG_PORT: 5432
      PG_DB: 'openadr'
      PG_USER: 'openadr'
      PG_PASSWORD: 'openadr'
      PG_TZ: 'Europe/Amsterdam'
      RUST_BACKTRACE: 'full'
      OAUTH_JWKS_LOCATION: 'http://host.docker.internal:8090/realms/openadr-realm/protocol/openid-connect/certs'
    healthcheck:
      test: curl --fail http://127.0.0.1:3000/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
        restart: true

volumes:
  database-data:
  pgdata:
